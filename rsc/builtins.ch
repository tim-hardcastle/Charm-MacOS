def

file = struct(filename string, contents list)

file(s string) : builtin "init_file"
codepoint(s string) : builtin "codepoint"
(S struct) ++ (p pair) : builtin "add_pair_to_struct"
(L list) ++ (p pair) : builtin "add_pair_to_list"
rune(i int) : builtin "rune"
charm(s single) : builtin "charm_single"
charm(s tuple) : builtin "charm_tuple"
tuple(s single) : builtin "single_to_tuple"
tuple(t tuple) : builtin "tuple_to_tuple"
spread(L list) : builtin "spread_list"
spread(S set) : builtin "spread_set"
(s single) in (L list) : builtin "single_in_list"
(s single) in (S set) : builtin "single_in_set"
(s single) in (T tuple) : builtin "single_in_tuple"
(m map) ++ (p pair) : builtin "add_pair_to_map" 
map (s set) : builtin "set_to_map"
map (t tuple) : builtin "tuple_to_map"
index (l label, S struct) : builtin "index_label_of_struct"
index (i int, L list) : builtin "index_int_of_list"
index (i int, S string) : builtin "index_int_of_string"
index (a int, M map) : builtin "index_any_of_map"
index (a float, M map) : builtin "index_any_of_map"
index (a string, M map) : builtin "index_any_of_map"
index (a label, M map) : builtin "index_any_of_map"
index (a type, M map) : builtin "index_any_of_map"
index (a bool, M map) : builtin "index_any_of_map"
index (i int, p pair) : builtin "index_int_of_pair"
index (i int, T tuple) : builtin "index_int_of_tuple"
index (p pair, L list) : builtin "index_pair_of_list"
index (p pair, S string) : builtin "index_pair_of_string"
index (p pair, T tuple) : builtin "index_pair_of_tuple"
(x any) :: (y any) : builtin "make_pair"
(x int) < (y int) : builtin "< int"
(x int) <= (y int) : builtin "<= int"
(x int) > (y int) : builtin "> int"
(x int) >= (y int) : builtin ">= int"
(x string) + (y string) : builtin "add_strings"
(x list) + (y list) : builtin "add_lists"
(x set) + (y set) : builtin "add_sets"
(x set) ++ (y single) : builtin "add_element_to_set"
(x int) + (y int) : builtin "add_integers"
- (x int) : builtin "negate_integer"
(x int) - (y int) : builtin "subtract_integers"
(x int) * (y int) : builtin "multiply_integers"
(x int) % (y int) : builtin "modulo_integers"
(x int) / (y int) : builtin "divide_integers"
(x float) < (y float) : builtin "< float"
(x float) <= (y float) : builtin "<= float"
(x float) > (y float) : builtin "> float"
(x float) >= (y float) : builtin ">= float"
(x float) + (y float) : builtin "add_floats"
- (x float) : builtin "negate_float"
(x float) - (y float) : builtin "subtract_floats"
(x float) * (y float) : builtin "multiply_floats"
(x float) / (y float) : builtin "divide_floats"
len(x string) : builtin "len_string"
len(x list)	: builtin "len_list"
arity(x tuple) : builtin "arity_tuple"
string(x int) : builtin "int_to_string"
string(x float) : builtin "float_to_string"
string(x string) : builtin "string_to_string"
string(x type) : builtin "type_to_string"
int(x string) : builtin "string_to_int"
float(x string) : builtin "string_to_float"
int(x float) : builtin "float_to_int"
float(x int) : builtin "int_to_float"
bool(x int) : builtin "int_to_bool"
bool(x string) : builtin "string_to_bool"
bool(x list) : builtin "list_to_bool"
bool(x set) : builtin "set_to_bool"
bool(x map) : builtin "map_to_bool"
type(x single) : builtin "type"
type(x tuple) : builtin "type_of_tuple"
error(x string) : builtin "make_error"